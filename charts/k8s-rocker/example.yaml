nameOverride: # defaults to .Chart.Name
restart: 'Always'
version: # defaults to .Chart.Version

meta: # added to all objects
  labels:
    metalabel: foo
  annotations:
    metaannotation: bar

volumeClaims:
  'name':
    meta:
      annotations:
        bar: baz
        vol: 1
    mode: 'ReadWriteOnce'
    storage: '500Mi'

secrets:
  'name':
    immutable: false
    meta:
      annotations:
        bar: baz
    strings:
      'key': |
         some sting value
         possibly multiline
    files:
      'key2': test/secrets/file.secret
      'key3': test/secrets/image.jpg

configmaps:
  'name':
    meta:
      annotations:
        bar: baz
    data:
      'key': value
      'key2': value2
    files:
      'key3': test/configMap/test.yml
      'key4': test/configMap/img.png

pod: # the main pod
  'web':
    image: nginx
    tag: # defaults to latest
    policy: 'IfNotPresent' # imagePullPolicy
    cpu:
      min: 100m
      max: 200m
    memory:
      min: 100Mi
      max: 110Mi

    command: # startup command
      - echo
    args: # startup args
      - $NAME
      - $raw-from
    ports:
      'port-name':
        port: 80
        protocol: 'TCP'
    env:
      'NAME': 'SOME_ENV_VALUE'
      'raw-from': # passed raw. see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
    health:
      live: # a probe spec, passed raw. see https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
        httpGet:
          port: 80
          path: '/'
      ready: # a probe spec, passed raw. defaults to live
        httpGet:
          port: 80
          path: '/ready'
      start: # a probe spec, passed raw. defaults to live
        httpGet:
          port: 80
          path: '/start'
    restart: 'Always' # restartPolicy
    mounts: # mounts
      volumes:
        'volumename':
          path: '/some/path'
          readOnly: true
          subPath: '.something'
        'other': '/to/this/path'
      secrets:
        'secretname': '/secret/path'
      configmaps:
        'configmapname': '/configmap/path'
    raw: # passed raw into the container spec
init:
  # podspec for initing the pod
  'foo':
    image: busybox
    tag: # defaults to latest
    command:
      - true
test:
  # podspec as above, used for helm test

deployment:
  meta:
  strategy: 'RollingUpdate' # default is rolling
  minReadySeconds: 0 # minimum ready seconds
  autoscaling:
    meta:
      annotations:
        'some': 'scaler'
    minReplicas: 1 # default is 1
    maxReplicas: 10 # no default
    targetCPU: 80 # default is 80
    targetMemory: 80 # default is 80

statefulset:
  name: 'statefulsetname'
  meta:
  replicas: 1
  policy: 'OrderedReady'
  strategy: 'RollingUpdate'
  minReadySeconds: # minimum ready seconds

services:
  'someservice':
    type: 'ClusterIP'
    ports:
      'name':
        port: 80
        target: 80 # defaults to port
        protocol: 'tcp'
      'port2':
        port: 80
        target: 80 # defaults to port
        protocol: 'tcp'
    meta: # additional metadata
      labels:
        foo: bar

cronjobs:
  'name':
    meta:
    schedule: '@midnight' # default is midnight
    restartPolicy: 'OnFailure' # default is OnFailure. can be 'Never' too
    pod: # podspec like above
      'echo':
        image: busybox
        command:
          - echo
        args:
          - 'hello'

ingress:
  'name':
    meta:
    hosts:
      'host.of.app':
          '/':
            type: 'Prefix'
            to: 'servicename'
            port: 8080
